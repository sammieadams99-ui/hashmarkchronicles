name: Spotlight datasets

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

permissions:
  contents: write

concurrency:
  group: spotlight-build
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      SEASON: "2025"
      TEAM_ID: "96"
      STRICT_SEASON: "true"
      PURGE_IF_SEASON_MISMATCH: "true"
      ESPN_BACKOFF: "250,600,1200"
      ESPN_TIMEOUT: "9000"
      FRONTEND_FORCE_STATIC: "false"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore last-good artifacts
        uses: actions/download-artifact@v4
        with:
          name: data-artifacts
          path: .lastgood
        continue-on-error: true

      - name: Restore /data from last-good if empty
        run: |
          mkdir -p data
          if [ -z "$(ls -A data 2>/dev/null)" ] && [ -d .lastgood ]; then rsync -a .lastgood/ data/ || true; fi

      - name: Season guard / purge outdated last-good
        run: |
          set -e
          mkdir -p data/team
          TARGET="${{ env.SEASON }}"
          if [ -f data/team/roster_meta.json ]; then
            META_SEASON=$(jq -r '.season' data/team/roster_meta.json || echo "unknown")
            if [ "${{ env.PURGE_IF_SEASON_MISMATCH }}" = "true" ] && [ "$META_SEASON" != "$TARGET" ]; then
              echo "Purging last-good cache: $META_SEASON != $TARGET"
              rm -rf data/team/roster.json data/team/roster_plus.json data/team/roster_meta.json ./.cache/espn* || true
            fi
          fi
          fi

      - name: Install dependencies
        run: npm install

      - name: Validate fixtures
        run: npm run test:fixtures

      - name: Build roster
        env:
          DRY_RUN: "false"
        run: node scripts/build_espn_roster.js || echo "fallback to cached roster"

      - name: Build spotlight
        env:
          DRY_RUN: "false"
        run: node scripts/build_spotlight.js || echo "provider hiccup â€” using last-good /data"

      - name: Rebuild ESPN map
        run: node scripts/rebuild_espn_map_from_roster.js

      - name: JSON schema checks
        run: npx ajv-cli validate -s data/.schema/roster.schema.json -d data/team/roster.json

      - name: Validate datasets
        run: npm run validate:data

      - name: Deep audit
        run: node scripts/audit_dataset_integrity.js --deep
        continue-on-error: true

      - name: Trim artifacts
        run: |
          mkdir -p artifacts/history
          find artifacts -type f -size +25M -delete || true
          ls -lt artifacts/history | tail -n +6 | awk '{print $9}' | xargs -I{} rm -rf artifacts/history/{} || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: data-artifacts
          path: artifacts
